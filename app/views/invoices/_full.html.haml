%table.invoice{ :border => "1", :cellpadding => "4", :cellspacing => "0" }
  %tr
    %th User
    %th Time
    %th Hours
    %th Rate
    %th Total
    %th Notes
  
  %tbody{ :class => invoice.status, :id => "invoice_#{invoice.id_or_new}" }
    - if invoice.status == 'unbilled'
      %tr#new_line_items
        %td{ :colspan => 4 }
          = button_to 'Clock In', clock_in_path(@client), :id => 'clock_in'
          &nbsp;
          &raquo;
          = link_to 'Create Invoice', new_invoice_path(@client), :id => 'create_invoice'
          &nbsp;
          &raquo;
          = link_to 'Merge', merge_line_items_path(@client), :id => 'merge'
        %td.total= number_to_currency invoice.balance
        %td
          %b Current Balance
    - else
      %tr
        %td{ :colspan => 4 }
          &raquo;
          = link_to 'Export PDF', invoice_path(:id => invoice.id, :format => :pdf)
          &nbsp;
          &raquo;
          = link_to 'Merge', merge_line_items_path(@client), :class => 'merge'
          %br
          &raquo;
          = link_to 'Edit', edit_invoice_path(invoice)
          &nbsp;
          &raquo;
          = link_to 'Delete', invoice_path(invoice), :method => :delete, :confirm => 'Are you certain you want to delete this invoice and its hours and notes?'
        %td.total= number_to_currency invoice.balance
        %td
          %div
            Invoiced on:
            = invoice.date.to_s(:slash) if invoice.date
          - if invoice.paid?
            %b PAYMENTS:
            - invoice.payments.each do |p|
              %li= number_to_currency(p.total)+' '+p.created_at.to_s(:slash)
          - else
            %b.red UNPAID
            =# button_to 'Mark as Paid', paid_invoice_path(invoice)

    = render :partial => 'line_items/line_item', :collection => invoice.line_items.sort
